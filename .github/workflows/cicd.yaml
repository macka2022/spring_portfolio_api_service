env:
  SPRING_DATASOURCE_URL: ${{secrets.SPRING_DATASOURCE_URL}}
  SPRING_DATASOURCE_USERNAME: ${{secrets.SPRING_DATASOURCE_USERNAME}}
  SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_URL }}

name: CI-CD Spring Boot Full

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-test:
    name: Build & Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and run unit tests
        run: mvn clean test -B

  sonar-audit-quality:
    name: SonarQube Audit & Quality Analysis
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: SonarQube Scan (Quality + Audit)
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn sonar:sonar \
          -Dsonar.projectKey=demoportflio \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  security-check:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: OWASP Dependency-Check
        run: mvn org.owasp:dependency-check-maven:check

  docker:
    name: Build & Push Docker
    runs-on: ubuntu-latest
    needs: [sonar-audit-quality, security-check]
    if: success()  # exécute seulement si tous les jobs précédents réussissent
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t macka/demoportflio:latest .

      - name: Push Docker image
        run: docker push macka/demoportflio:latest
